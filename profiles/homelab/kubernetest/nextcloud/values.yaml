nextcloud:
  host: "nextcloud.vivenot.dev" # <--- IMPORTANT: Change this to your desired Nextcloud URL
  username: "youradminuser" # <--- IMPORTANT: Change this!
  password: "yoursecurepassword" # <--- IMPORTANT: Change this!

  # Persistence settings for Nextcloud data
  # This section ensures your Nextcloud files are stored persistently
  persistence:
    enabled: true
    size: 50Gi # <--- Adjust this size as needed for your Nextcloud data
    storageClass: "local-path-hdd" # Uncomment and specify if you don't have a default StorageClass

# Persistence for the internal MariaDB database (recommended for simplicity in dev/small scale)
# This ensures your Nextcloud database is also persistent
internalDatabase:
  enabled: true
  mariadb:
    master:
      persistence:
        enabled: true
        size: 10Gi # <--- Adjust this size as needed for your database
        storageClass: "local-path-hdd" # Uncomment and specify if you don't have a default StorageClass

# Ingress for external access (recommended for web applications)
# This will expose your Nextcloud via a standard HTTP/HTTPS entrypoint
ingress:
  enabled: true
  className: "traefik" # <--- Change if you use a different Ingress Controller (e.g., "traefik", "gce")
  host: "nextcloud.vivenot.dev" # <--- IMPORTANT: Must match nextcloud.host
  annotations:
    # --- Cert-Manager Annotations ---
    # Tell cert-manager to issue a certificate for this Ingress using the 'letsencrypt-prod' ClusterIssuer
    cert-manager.io/cluster-issuer: "letsencrypt-staging" # <--- IMPORTANT: Match the name of your ClusterIssuer
    # Or for a namespaced Issuer: cert-manager.io/issuer: "your-namespace/your-issuer-name"

    # Other Nginx Ingress annotations (already discussed)
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
  # For HTTPS, you'll typically configure TLS here.
  # This example assumes you'll manage TLS outside the chart (e.g., via cert-manager)
  # or rely on an external load balancer for SSL termination.
  # For simple HTTP in dev, this is fine.
  tls: []
  # - secretName: nextcloud-tls # Name of the Kubernetes Secret containing your TLS certificate
  #   hosts:
  #     - nextcloud.yourdomain.com

# NodePort (Optional, if not using Ingress)
# If you don't have an Ingress controller or just want a quick test via NodePort,
# you can configure the service type. However, for a web app, Ingress is better.
service:
  type: ClusterIP # Default and recommended if using Ingress
  # type: NodePort # Uncomment this and remove/disable ingress if you want to use NodePort
  # nodePort: 32000 # Uncomment and set a port in the 30000-32767 range if using NodePort
